[tool.black]
line-length = 127
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 127
known_django = "django"
known_first_party = "nbagrid_api_app,nbagrid_api"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]
skip = ["migrations", "venv", "env"]

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring", 
    "missing-function-docstring",
    "too-few-public-methods",
    "import-error"
]

[tool.pylint.format]
max-line-length = 127

[tool.coverage.run]
source = "."
omit = [
    "*/venv/*",
    "*/env/*", 
    "manage.py",
    "*/settings/*",
    "*/migrations/*",
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/static/*",
    "*/media/*",
    "*/wsgi.py",
    "*/asgi.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]